@using System.Activities.Statements
@model User
           
@{
    var displayMode = "default";
    const string modeKey = "displayMode";

    if (ViewData.ContainsKey(modeKey))
    {
        displayMode = string.IsNullOrWhiteSpace(ViewData[modeKey] as string) ? displayMode : ViewData[modeKey].ToString();
    }
}

@if (displayMode.Equals("default", StringComparison.OrdinalIgnoreCase))
{
    <div class="del2 card_links">
        <figure class="card_thumb_outer">
            <img src="@string.Format("data:image/jpg;base64,{0}", Model.Icon)" style="width: 100%" />
        </figure>
        <ul class="card_lk_lst">
            <li class="card_lk_i"><a href="@Url.Action("Profile", "Account", new {id = Model.Id})" class="card_lk">Developer’s profile</a></li>
            <li class="card_lk_i"><a href="@Url.Action("Contact", "Account", new {id = Model.Id})" class="card_lk">Contact the developer</a></li>
            <li class="card_lk_i"><a href="@Url.Action("DevelopersExtensions", "Search", new {userId = Model.Id})" class="card_lk">More extensions by Developer</a></li>
        </ul>
    </div>
}
else
{
    <div class="developer-info del2">
        <h4 class="developer-info_t">About the Developer</h4>
        <div class="developer-info_tx">
            This extension was developed by<br />and is supported by @Model.Name
        </div>
        <ul class="card_lk_lst">
            <li class="card_lk_i"><a href="#" class="card_lk">support for this extension</a></li>
            <li class="card_lk_i"><a href="@Url.Action("Contact", "Account", new {id = Model.Id})" class="card_lk">feedback to developer</a></li>
            <li class="card_lk_i"><a href="@Url.Action("Profile", "Account", new { id = Model.Id })" class="card_lk">Developer’s profile</a></li>
            <li class="card_lk_i"><a href="@Url.Action("DevelopersExtensions", "Search", new {userId = Model.Id})" class="card_lk">More extensions by Developer</a></li>
        </ul>
    </div>
}
